backend 설정에서는 표현식이나 변수 사용이 불가능하므로 단일 버킷 사용 권장
    terraform cli 옵션 중 -backend-config를 통해서 값을 바꿀 수 있음

다중계정으로 S3사용시 assume role을 통해서 다른 계정에 접근
S3 cross account 설정을 통해서 사용할경우, 운영계정의 access key 관리를 위한 정책이 필요
되도록 운영계정을 role base로 운영

환경 분리, 다중 계정 관리 : workspace
다중 계정과 호나경을 한번에 관리?
    project_a_dev / project_b_prd...
    terraform은 동일한 환경을 재사용할 때 유리
    테스트 하기 위해서 개발환경이 있는데 개발/운영환경이 달라지면 > workspace를 쓰기 보단 sub module로 분리

디렉토리
    파일은 최대한 분리 ( 리소스 타입, 서비스 타입 )
    큰 서비스는 sub module
        module화의 장점: 개념적으로 분리하기 쉬워짐 ( label name 을 짧게 쓸수 있다 )
    sub module이 너무 커지면 프로젝트로 분리
        module 간에 output으로 참조하던 부분은 data로 처리
        sub module state import/export는 공식 지원 x
    환경(dev/prd)별로 sub module로 나누는 방식은 권장하지 않음
        물론 워크로드에 따라 오히려 좋을 수 있음

module
    되도록이면 provider나 커뮤니티에서 지원하는것 사용
    OS나 프로세서(intel, arm)에 의존성이 있는지 확인 필요
    자체적으로 private registry를 운영하여 필요한 외부 module은 fork받아서 운영하는 것도 하나의 방법
        공식 registry 장애 발생시 대응 가능
        회사 내 module 공유
        필요시 직접 bugfix하여 사용 가능
    module version은 fixed 하게 사용 ( version = "~> 4.0" 말고 version = "4.48.0" 처럼)
        version이 올라가면서 기본값이 달라지거나 버그가 발생할 수 있음